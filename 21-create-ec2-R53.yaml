- name: create ec2 and r53 records
  hosts: local
  connection: local
  vars:
    subnet_id: subnet-08d8e94e48bab0c56
    sg_id: sg-049b405284d2ff233
    ami_id: ami-09c813fb71547fc4f
    instances:
    - mysql
    - backend
    - frontend
    zone: devopstesting.space
  tasks:
   - name: install boto3 and botocore
     ansible.builtin.pip:
       name:
       - boto3
       - botocore
       executable: pip3.9
              
   - name: creating ec2 instance using boto3
     amazon.aws.ec2_instance:
       name: "{{ item }}"
       vpc_subnet_id: "{{subnet_id}}"
       instance_type: t3.micro
       security_group: "{{ sg_id }}"
       image_id: "{{ ami_id }}"
     loop: "{{ instances}}"
     register: ec2_instances

   - name: print the output
     ansible.builtin.debug:
       msg: "{{ ec2_instances}}"
     
     #private IP r53
   - name: create r53 private records 
     amazon.aws.route53:
       state: present
       zone: "{{ zone }}"
       record: "{{item.item}}.{{ zone }}" #mysql.devopstesting.space
       type: A
       ttl: 1
       value: "{{ item.instances[0].private_ip_address }}"
       wait: true 
       overwrite: true
     loop: "{{ ec2_instances.results }}"

     #public IP r53
   
   - name: create r53 public records for front end
     amazon.aws.route53:
       state: present
       zone: "{{ zone }}"
       record: "{{ zone }}" #devopstesting.space
       type: A
       ttl: 1
       value: "{{ item.instances[0].public_ip_address }}"
       wait: true 
       overwrite: true
     loop: "{{ ec2_instances.results }}" 
     when: item.item == "frontend"
     #this will make sure that public record is created only for frontend servers